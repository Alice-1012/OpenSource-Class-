{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "kernelspec": {
      "display_name": "Python 3",
      "language": "python",
      "name": "python3"
    },
    "language_info": {
      "codemirror_mode": {
        "name": "ipython",
        "version": 3
      },
      "file_extension": ".py",
      "mimetype": "text/x-python",
      "name": "python",
      "nbconvert_exporter": "python",
      "pygments_lexer": "ipython3",
      "version": "3.8.5"
    },
    "colab": {
      "name": "32183223_이수민.ipynb",
      "provenance": [],
      "include_colab_link": true
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/Alice-1012/OpenSource-Class-/blob/main/32183223_%E1%84%8B%E1%85%B5%E1%84%89%E1%85%AE%E1%84%86%E1%85%B5%E1%86%AB.py\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "scrolled": false,
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000
        },
        "id": "6OVJMsIjpfk-",
        "outputId": "b721f79c-2876-4577-b558-c6672d1e5bed"
      },
      "source": [
        "import random\n",
        "import time\n",
        "from datetime import timedelta\n",
        "import datetime\n",
        "\n",
        "Item = ['Espresso','Americano','Latte','Cappuccino','Mocha','Macchiato','Dolce latte', 'Cold brew', 'Green tea','Milk']\n",
        "Price = ['3600','4100','4600','4700','5100','5200','5600','5800','4200','4000']\n",
        "Cashier = ['Lee','SU','MIN']\n",
        "Payment = ['card','cash']\n",
        "\n",
        "Sales = []\n",
        "print('Bill num Cashier items\\tQuant\\tUnit Price\\tTotal Price\\tPayment\\tDate')\n",
        "#print('Cashier: %s'%choiceCashier)\n",
        "\n",
        "print('------------------------------------------------------------------------------------------')\n",
        "print('------------------------------------------------------------------------------------------')\n",
        "#D = time.strftime('%Y-%m-%d-%X', time.localtime(time.time()))\n",
        "D = datetime.datetime.now()   \n",
        "D = D.replace(second=0, microsecond=0)\n",
        "for i in range(100):\n",
        "    Q = random.randint(1,3)\n",
        "    J = random.randint(0,9)\n",
        "    D+=datetime.timedelta(hours=1)\n",
        "    Total = Q*int(Price[J])\n",
        "    choiceCashier = random.choice(Cashier)\n",
        "    choicePayment = random.choice(Payment)\n",
        "    Salesline = f'{i+1},{choiceCashier}, {Item[J]}, {Q}, {Price[J]},{Total},{choicePayment},{D}.\\n'\n",
        "    Sales.append(Salesline)\n",
        "       \n",
        "for i in Sales:\n",
        "     print(i)\n",
        "f = open('C:/Users/csos/Desktop/2021-1/과제/오픈소스활용/Sales_이수민.csv','w')\n",
        "f.write('Bill num,Cashier,items,Quant,Unit Price,Total Price,Payment,Date\\n')\n",
        "f.writelines(Sales)\n",
        "f.close()"
      ],
      "execution_count": 1,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Bill num Cashier items\tQuant\tUnit Price\tTotal Price\tPayment\tDate\n",
            "------------------------------------------------------------------------------------------\n",
            "------------------------------------------------------------------------------------------\n",
            "1,SU, Americano, 1, 4100,4100,card,2021-10-23 15:55:00.\n",
            "\n",
            "2,Lee, Green tea, 2, 4200,8400,cash,2021-10-23 16:55:00.\n",
            "\n",
            "3,MIN, Espresso, 3, 3600,10800,card,2021-10-23 17:55:00.\n",
            "\n",
            "4,MIN, Cold brew, 2, 5800,11600,card,2021-10-23 18:55:00.\n",
            "\n",
            "5,Lee, Dolce latte, 3, 5600,16800,cash,2021-10-23 19:55:00.\n",
            "\n",
            "6,MIN, Americano, 3, 4100,12300,cash,2021-10-23 20:55:00.\n",
            "\n",
            "7,SU, Mocha, 1, 5100,5100,card,2021-10-23 21:55:00.\n",
            "\n",
            "8,Lee, Dolce latte, 3, 5600,16800,cash,2021-10-23 22:55:00.\n",
            "\n",
            "9,SU, Dolce latte, 2, 5600,11200,cash,2021-10-23 23:55:00.\n",
            "\n",
            "10,SU, Dolce latte, 3, 5600,16800,card,2021-10-24 00:55:00.\n",
            "\n",
            "11,SU, Cold brew, 2, 5800,11600,cash,2021-10-24 01:55:00.\n",
            "\n",
            "12,Lee, Green tea, 2, 4200,8400,cash,2021-10-24 02:55:00.\n",
            "\n",
            "13,Lee, Dolce latte, 3, 5600,16800,card,2021-10-24 03:55:00.\n",
            "\n",
            "14,MIN, Americano, 1, 4100,4100,cash,2021-10-24 04:55:00.\n",
            "\n",
            "15,SU, Milk, 1, 4000,4000,cash,2021-10-24 05:55:00.\n",
            "\n",
            "16,MIN, Cold brew, 3, 5800,17400,card,2021-10-24 06:55:00.\n",
            "\n",
            "17,Lee, Dolce latte, 3, 5600,16800,cash,2021-10-24 07:55:00.\n",
            "\n",
            "18,MIN, Espresso, 2, 3600,7200,card,2021-10-24 08:55:00.\n",
            "\n",
            "19,Lee, Macchiato, 2, 5200,10400,cash,2021-10-24 09:55:00.\n",
            "\n",
            "20,SU, Mocha, 2, 5100,10200,cash,2021-10-24 10:55:00.\n",
            "\n",
            "21,MIN, Cappuccino, 3, 4700,14100,card,2021-10-24 11:55:00.\n",
            "\n",
            "22,Lee, Dolce latte, 1, 5600,5600,card,2021-10-24 12:55:00.\n",
            "\n",
            "23,MIN, Cappuccino, 1, 4700,4700,card,2021-10-24 13:55:00.\n",
            "\n",
            "24,SU, Cold brew, 1, 5800,5800,card,2021-10-24 14:55:00.\n",
            "\n",
            "25,SU, Espresso, 2, 3600,7200,cash,2021-10-24 15:55:00.\n",
            "\n",
            "26,MIN, Macchiato, 1, 5200,5200,cash,2021-10-24 16:55:00.\n",
            "\n",
            "27,SU, Cold brew, 2, 5800,11600,cash,2021-10-24 17:55:00.\n",
            "\n",
            "28,SU, Dolce latte, 1, 5600,5600,card,2021-10-24 18:55:00.\n",
            "\n",
            "29,SU, Mocha, 3, 5100,15300,cash,2021-10-24 19:55:00.\n",
            "\n",
            "30,Lee, Espresso, 3, 3600,10800,card,2021-10-24 20:55:00.\n",
            "\n",
            "31,SU, Dolce latte, 3, 5600,16800,cash,2021-10-24 21:55:00.\n",
            "\n",
            "32,SU, Mocha, 3, 5100,15300,card,2021-10-24 22:55:00.\n",
            "\n",
            "33,SU, Milk, 1, 4000,4000,cash,2021-10-24 23:55:00.\n",
            "\n",
            "34,MIN, Mocha, 3, 5100,15300,cash,2021-10-25 00:55:00.\n",
            "\n",
            "35,Lee, Dolce latte, 2, 5600,11200,cash,2021-10-25 01:55:00.\n",
            "\n",
            "36,Lee, Milk, 2, 4000,8000,card,2021-10-25 02:55:00.\n",
            "\n",
            "37,Lee, Cappuccino, 1, 4700,4700,card,2021-10-25 03:55:00.\n",
            "\n",
            "38,SU, Green tea, 1, 4200,4200,card,2021-10-25 04:55:00.\n",
            "\n",
            "39,MIN, Mocha, 1, 5100,5100,cash,2021-10-25 05:55:00.\n",
            "\n",
            "40,Lee, Green tea, 3, 4200,12600,cash,2021-10-25 06:55:00.\n",
            "\n",
            "41,Lee, Latte, 2, 4600,9200,cash,2021-10-25 07:55:00.\n",
            "\n",
            "42,MIN, Latte, 3, 4600,13800,cash,2021-10-25 08:55:00.\n",
            "\n",
            "43,SU, Americano, 2, 4100,8200,cash,2021-10-25 09:55:00.\n",
            "\n",
            "44,Lee, Espresso, 3, 3600,10800,cash,2021-10-25 10:55:00.\n",
            "\n",
            "45,MIN, Milk, 3, 4000,12000,cash,2021-10-25 11:55:00.\n",
            "\n",
            "46,SU, Macchiato, 3, 5200,15600,card,2021-10-25 12:55:00.\n",
            "\n",
            "47,Lee, Cold brew, 3, 5800,17400,card,2021-10-25 13:55:00.\n",
            "\n",
            "48,SU, Mocha, 3, 5100,15300,cash,2021-10-25 14:55:00.\n",
            "\n",
            "49,MIN, Green tea, 1, 4200,4200,cash,2021-10-25 15:55:00.\n",
            "\n",
            "50,MIN, Cappuccino, 2, 4700,9400,card,2021-10-25 16:55:00.\n",
            "\n",
            "51,Lee, Cold brew, 2, 5800,11600,card,2021-10-25 17:55:00.\n",
            "\n",
            "52,Lee, Espresso, 3, 3600,10800,card,2021-10-25 18:55:00.\n",
            "\n",
            "53,MIN, Americano, 2, 4100,8200,cash,2021-10-25 19:55:00.\n",
            "\n",
            "54,SU, Mocha, 2, 5100,10200,cash,2021-10-25 20:55:00.\n",
            "\n",
            "55,SU, Espresso, 2, 3600,7200,card,2021-10-25 21:55:00.\n",
            "\n",
            "56,Lee, Espresso, 1, 3600,3600,card,2021-10-25 22:55:00.\n",
            "\n",
            "57,MIN, Milk, 1, 4000,4000,card,2021-10-25 23:55:00.\n",
            "\n",
            "58,Lee, Americano, 1, 4100,4100,cash,2021-10-26 00:55:00.\n",
            "\n",
            "59,Lee, Cappuccino, 2, 4700,9400,cash,2021-10-26 01:55:00.\n",
            "\n",
            "60,Lee, Mocha, 1, 5100,5100,card,2021-10-26 02:55:00.\n",
            "\n",
            "61,Lee, Milk, 2, 4000,8000,card,2021-10-26 03:55:00.\n",
            "\n",
            "62,MIN, Cappuccino, 1, 4700,4700,cash,2021-10-26 04:55:00.\n",
            "\n",
            "63,Lee, Espresso, 3, 3600,10800,cash,2021-10-26 05:55:00.\n",
            "\n",
            "64,Lee, Mocha, 3, 5100,15300,card,2021-10-26 06:55:00.\n",
            "\n",
            "65,MIN, Espresso, 3, 3600,10800,cash,2021-10-26 07:55:00.\n",
            "\n",
            "66,SU, Mocha, 2, 5100,10200,cash,2021-10-26 08:55:00.\n",
            "\n",
            "67,Lee, Cold brew, 1, 5800,5800,card,2021-10-26 09:55:00.\n",
            "\n",
            "68,Lee, Milk, 1, 4000,4000,cash,2021-10-26 10:55:00.\n",
            "\n",
            "69,MIN, Cappuccino, 2, 4700,9400,cash,2021-10-26 11:55:00.\n",
            "\n",
            "70,MIN, Milk, 2, 4000,8000,card,2021-10-26 12:55:00.\n",
            "\n",
            "71,SU, Americano, 2, 4100,8200,cash,2021-10-26 13:55:00.\n",
            "\n",
            "72,MIN, Mocha, 3, 5100,15300,cash,2021-10-26 14:55:00.\n",
            "\n",
            "73,MIN, Mocha, 1, 5100,5100,cash,2021-10-26 15:55:00.\n",
            "\n",
            "74,SU, Mocha, 2, 5100,10200,cash,2021-10-26 16:55:00.\n",
            "\n",
            "75,Lee, Latte, 1, 4600,4600,card,2021-10-26 17:55:00.\n",
            "\n",
            "76,SU, Mocha, 3, 5100,15300,card,2021-10-26 18:55:00.\n",
            "\n",
            "77,SU, Cappuccino, 3, 4700,14100,cash,2021-10-26 19:55:00.\n",
            "\n",
            "78,MIN, Milk, 3, 4000,12000,cash,2021-10-26 20:55:00.\n",
            "\n",
            "79,Lee, Espresso, 2, 3600,7200,card,2021-10-26 21:55:00.\n",
            "\n",
            "80,MIN, Latte, 2, 4600,9200,card,2021-10-26 22:55:00.\n",
            "\n",
            "81,SU, Mocha, 3, 5100,15300,cash,2021-10-26 23:55:00.\n",
            "\n",
            "82,Lee, Latte, 1, 4600,4600,card,2021-10-27 00:55:00.\n",
            "\n",
            "83,MIN, Americano, 3, 4100,12300,card,2021-10-27 01:55:00.\n",
            "\n",
            "84,SU, Dolce latte, 2, 5600,11200,card,2021-10-27 02:55:00.\n",
            "\n",
            "85,Lee, Cappuccino, 2, 4700,9400,cash,2021-10-27 03:55:00.\n",
            "\n",
            "86,Lee, Green tea, 1, 4200,4200,cash,2021-10-27 04:55:00.\n",
            "\n",
            "87,MIN, Dolce latte, 2, 5600,11200,card,2021-10-27 05:55:00.\n",
            "\n",
            "88,SU, Cappuccino, 1, 4700,4700,cash,2021-10-27 06:55:00.\n",
            "\n",
            "89,SU, Macchiato, 1, 5200,5200,card,2021-10-27 07:55:00.\n",
            "\n",
            "90,MIN, Milk, 2, 4000,8000,card,2021-10-27 08:55:00.\n",
            "\n",
            "91,Lee, Cappuccino, 2, 4700,9400,card,2021-10-27 09:55:00.\n",
            "\n",
            "92,MIN, Cold brew, 2, 5800,11600,card,2021-10-27 10:55:00.\n",
            "\n",
            "93,SU, Green tea, 3, 4200,12600,card,2021-10-27 11:55:00.\n",
            "\n",
            "94,SU, Mocha, 2, 5100,10200,card,2021-10-27 12:55:00.\n",
            "\n",
            "95,MIN, Macchiato, 1, 5200,5200,card,2021-10-27 13:55:00.\n",
            "\n",
            "96,Lee, Green tea, 1, 4200,4200,cash,2021-10-27 14:55:00.\n",
            "\n",
            "97,Lee, Latte, 3, 4600,13800,card,2021-10-27 15:55:00.\n",
            "\n",
            "98,MIN, Mocha, 1, 5100,5100,card,2021-10-27 16:55:00.\n",
            "\n",
            "99,SU, Latte, 1, 4600,4600,cash,2021-10-27 17:55:00.\n",
            "\n",
            "100,MIN, Latte, 2, 4600,9200,cash,2021-10-27 18:55:00.\n",
            "\n"
          ]
        },
        {
          "output_type": "error",
          "ename": "FileNotFoundError",
          "evalue": "ignored",
          "traceback": [
            "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
            "\u001b[0;31mFileNotFoundError\u001b[0m                         Traceback (most recent call last)",
            "\u001b[0;32m<ipython-input-1-041376de7752>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m()\u001b[0m\n\u001b[1;32m     30\u001b[0m \u001b[0;32mfor\u001b[0m \u001b[0mi\u001b[0m \u001b[0;32min\u001b[0m \u001b[0mSales\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     31\u001b[0m      \u001b[0mprint\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mi\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 32\u001b[0;31m \u001b[0mf\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mopen\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m'C:/Users/csos/Desktop/2021-1/과제/오픈소스활용/Sales_이수민.csv'\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m'w'\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     33\u001b[0m \u001b[0mf\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mwrite\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m'Bill num,Cashier,items,Quant,Unit Price,Total Price,Payment,Date\\n'\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     34\u001b[0m \u001b[0mf\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mwritelines\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mSales\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;31mFileNotFoundError\u001b[0m: [Errno 2] No such file or directory: 'C:/Users/csos/Desktop/2021-1/과제/오픈소스활용/Sales_이수민.csv'"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "h9fKm5zkpflD",
        "outputId": "1ddd430b-1621-4dd9-9769-c1447b3e08b0"
      },
      "source": [
        "f = open('C:/Users/csos/Desktop/2021-1/과제/오픈소스활용/Sales_이수민.csv','r')\n",
        "date_list=[]\n",
        "\n",
        "for line in lines:\n",
        "    if 'Bill num' not in line:\n",
        "        l=line.split(',')[7]\n",
        "        date_list.append(l[5:10])\n",
        "\n",
        "f.close()\n",
        "date_list=list(set(date_list))\n",
        "print(date_list)"
      ],
      "execution_count": null,
      "outputs": [
        {
          "name": "stdout",
          "output_type": "stream",
          "text": [
            "['03-29', '03-31', '03-27', '03-30', '03-28', '04-01']\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "qpp6F0ZypflE",
        "outputId": "5c2dd7fa-d374-4973-edb3-28d85e3fefd5"
      },
      "source": [
        "f = open('C:/Users/csos/Desktop/2021-1/과제/오픈소스활용/Sales_이수민.csv','r')\n",
        "lines = f.readlines()\n",
        "cashier_1_total = 0\n",
        "cashier_2_total = 0\n",
        "cashier_3_total = 0\n",
        "item_total=[0]*10\n",
        "payment_total=[0]*2\n",
        "date_total =[0]*5\n",
        "\n",
        "for line in lines:\n",
        "    if 'Lee' in line:\n",
        "        cashier_1_total += int(line.split(',')[5])\n",
        "    elif 'SU' in line:\n",
        "        cashier_2_total += int(line.split(',')[5])\n",
        "    elif 'MIN' in line:\n",
        "        cashier_3_total += int(line.split(',')[5])\n",
        "        \n",
        "    for i in range(10):\n",
        "        if Item[i] in line:\n",
        "            item_total[i]+=int(line.split(',')[5])\n",
        "    for i in range(2):\n",
        "        if Payment[i] in line:\n",
        "            payment_total[i]+=int(line.split(',')[5]) \n",
        "        \n",
        "    for i in range(5):\n",
        "        if date_list[i] in line.split(',')[7]:\n",
        "            date_total[i]+=int(line.split(',')[5])\n",
        "            if date_list[i] == '27':\n",
        "                print(line)\n",
        "    \n",
        "print(cashier_1_total)\n",
        "print(cashier_2_total)\n",
        "print(cashier_3_total)\n",
        "print(item_total)\n",
        "\n",
        "\n",
        "f.close()\n",
        "\n",
        "\n",
        "f = open('C:/Users/csos/Desktop/2021-1/과제/오픈소스활용/Salesreport_이수민.csv','w')\n",
        "f.write('항목별, 금액\\n')\n",
        "f.write(f'Cashier : {Cashier[0]}, {cashier_1_total}\\n')\n",
        "f.write(f'Cashier : {Cashier[1]}, {cashier_2_total}\\n')\n",
        "f.write(f'Cashier : {Cashier[2]}, {cashier_3_total}\\n')\n",
        "\n",
        "for i in range(10):\n",
        "    f.write(f'Item : {Item[i]},{item_total[i]},\\n')\n",
        "    \n",
        "for i in range(2):\n",
        "    f.write(f'Payment : {Payment[i]},{payment_total[i]},\\n')\n",
        "    \n",
        "for i in range(5):\n",
        "    f.write(f'Date : {date_list[i]}일,{date_total[i]},\\n')\n",
        "    \n",
        "\n",
        "\n",
        "\n",
        "f.close()"
      ],
      "execution_count": null,
      "outputs": [
        {
          "name": "stdout",
          "output_type": "stream",
          "text": [
            "306300\n",
            "334500\n",
            "404600\n",
            "[28800, 61500, 92000, 122200, 117300, 213200, 156800, 110200, 71400, 72000]\n"
          ]
        }
      ]
    }
  ]
}